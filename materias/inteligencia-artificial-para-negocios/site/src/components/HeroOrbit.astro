---
import { hudMetrics, toolkit } from "../data/course";

interface Props {
  title: string;
  tagline: string;
  description: string;
  ctaPrimary: { label: string; href: string };
  ctaSecondary?: { label: string; href: string };
}

const { title, tagline, description, ctaPrimary, ctaSecondary } = Astro.props as Props;
---

<section class="hero-orbit relative overflow-hidden">
  <video class="hero-orbit__video" autoplay muted loop playsinline poster={`${import.meta.env.BASE_URL}assets/hero/hero-lab.webp`}>
    <source src={`${import.meta.env.BASE_URL}assets/hero/hero-loop.webm`} type="video/webm" />
    <source src={`${import.meta.env.BASE_URL}assets/hero/hero-loop-original.mp4`} type="video/mp4" />
  </video>

  <div class="hero-orbit__overlay" />
  <div class="hero-orbit__halo" />

  <div class="hero-orbit__content">
    <div class="hero-orbit__alliances">
      <div class="hero-orbit__alliances-item">
        <span class="hero-orbit__alliances-label">En alianza</span>
        <div class="hero-orbit__alliances-logos">
          <img src={`${import.meta.env.BASE_URL}assets/externado-logo.png`} alt="Universidad Externado de Colombia" />
          <span class="hero-orbit__alliances-divider" />
          <img src={`${import.meta.env.BASE_URL}assets/logos/orbital-lab.svg`} alt="Orbital Lab" class="hero-orbit__alliances-orbital" />
        </div>
      </div>
    </div>

    <div class="space-y-7">
      <span class="inline-flex items-center gap-2 rounded-full border border-white/20 bg-white/10 px-4 py-1 text-xs uppercase tracking-[0.3em] text-red-200 backdrop-blur">
        Orbital Vinyl Collection
      </span>
      <h1 class="hero-orbit__title">
        <span class="text-red-300 md:text-red-400">Orbital Lab</span> presenta<br />
        <span class="bg-gradient-to-r from-white via-white/90 to-red-200 bg-clip-text text-transparent drop-shadow-[0_15px_35px_rgba(237,32,36,0.45)]">
          {title}
        </span>
      </h1>
      <p class="max-w-2xl text-lg text-slate-100/85">{tagline}</p>
      <p class="max-w-2xl text-base text-slate-200/75">{description}</p>
      <div class="flex flex-wrap gap-4 pt-4">
        <a
          href={ctaPrimary.disabled ? undefined : ctaPrimary.href}
          class:list={["hero-orbit__cta", "hero-orbit__cta--primary", ctaPrimary.disabled && "hero-orbit__cta--disabled"]}
          aria-disabled={ctaPrimary.disabled ? "true" : undefined}
          role={ctaPrimary.disabled ? "button" : undefined}
        >
          {ctaPrimary.label}
        </a>
        {ctaSecondary && (
          <a href={ctaSecondary.href} class="hero-orbit__cta hero-orbit__cta--secondary">
            {ctaSecondary.label}
          </a>
        )}
      </div>
    </div>

    <div class="hero-orbit__hud">
      <div class="absolute -right-10 -top-16 h-40 w-40 rounded-full bg-red-500/35 blur-3xl" />
      <div class="absolute bottom-0 left-0 h-44 w-44 -translate-x-1/3 translate-y-1/3 rounded-full bg-cyan-400/25 blur-3xl" />

      <div class="relative grid grid-cols-2 gap-4 text-center">
        {hudMetrics.map((metric) => (
          <div
            class="hud-card group rounded-2xl border border-white/10 bg-gradient-to-b from-white/10 to-transparent px-4 py-6 shadow-[0_0_35px_rgba(237,32,36,0.25)] transition duration-300 hover:-translate-y-1 hover:border-red-400/50"
            data-accent={metric.accent}
          >
            <span
              class:list={[
                "font-rajdhani text-4xl drop-shadow-[0_0_25px_rgba(0,0,0,0.45)] transition duration-300",
                metric.accent === "red" ? "text-red-200 group-hover:text-red-100" : "text-cyan-200 group-hover:text-cyan-100",
              ]}
            >
              {metric.value}
            </span>
            <p class="mt-2 text-[10px] uppercase tracking-[0.35em] text-slate-300/70">{metric.label}</p>
          </div>
        ))}
      </div>

      <div class="relative mt-6 rounded-2xl border border-white/10 bg-white/5 px-4 py-4 text-left backdrop-blur">
        <span class="text-xs uppercase tracking-[0.4em] text-red-200">Stack orbital</span>
        <div class="mt-3 flex flex-wrap gap-2">
          {toolkit.slice(0, 5).map((item) => (
            <span class="rounded-full border border-white/20 bg-white/10 px-3 py-1 text-xs text-slate-100/80">
              {item.label}
            </span>
          ))}
          <span class="rounded-full border border-red-400/60 bg-red-500/20 px-3 py-1 text-xs text-red-100/80">
            + m√°s
          </span>
        </div>
      </div>
    </div>
  </div>
</section>
